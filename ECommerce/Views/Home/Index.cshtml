@model IEnumerable<Entity.EntityClass.Book>
@{
    ViewData["Title"] = "Home Page";
}
@Html.Partial("ExchangeRateComponent")
@section Styles{
    <style>
        ._shadow {
            width: 100%;
            height: 250px;
            opacity: 0.7;
            background: black;
            z-index:100;
            position:absolute;
            display:flex;
            justify-content:center;
            align-items:center;
            color:#fff;
            font-size:20px;
            font-weight:bolder;
        }

        .profile-img-background{
            width:40px;
            height:40px;
            border-radius:50%;
            border:3px solid black;
            display:inline-block;
            float:left;
        }

        .profile-img-background + div{
                display: inline-block;
                overflow: hidden;
                overflow-wrap: break-word;
                width: 100%;
        }

    </style>
}
<link rel="stylesheet" href="./css/Home.css"/>
<div class="book-container">
    @foreach (var book in Model)
    {
        string path = null;
        @if (book.HeaderImagePath != null)
        {
            path = book.HeaderImagePath.Replace('\\', '/').Substring(1);
        }
        <div>
            <div class="card">
                @if (book.StockCount <= 0)
                {
                    <div class="_shadow">
                        Sold Out !
                    </div>
                }


                @if (book.DiscountRate != 0)
                {
                    <div class="discount">@book.DiscountRate%</div>
                }

                <div class="front" style="background-image:url('@path')"></div>
                <div class="back">@book.SmallDescription</div>

            </div>
            <div class="card-row">
                <a class="uk-button uk-button-default" asp-action="DetailsPage" asp-controller="Home" asp-route-bookid ="@book.Id">Inspect Book</a>
                <a class="uk-button uk-button-default commentbutton" bookId ="@book.Id">Comments</a>
                @* <a class="uk-button uk-button-default" asp-action="Comments" asp-controller="Home" asp-route-bookid="@book.Id">Comments</a> *@
            </div>
        </div>

    }
</div>
<style>
    .dark-background{
        position:absolute;
        width:100%;
        height:100%;
        background-color: rgba(0, 0, 0, .85);
        top:0;
        left:0;
        z-index:999;
    }

    .commnetscontainer {
        width:700px;
        height:400px;
        background-color: #fff !important;
        position:absolute;
        top:200px;
        left:50%;
        z-index: 1000;
        transform:translateX(-50%);
        border-radius:20px;
        border:10px solid black;
        display:flex;
        flex-direction:column;
    }

    .bottom{
        width:80%;
        height:50px;
        display:flex;
        justify-content:space-around;
        margin:auto;
        align-items:center;
    }
    .screen{
        width:600px;
        height:330px;
        border:5px solid black;
        margin:auto;
        margin-top:10px;
        overflow-y:scroll;
    }

    .chat{
        width:90%;
        background: #97dd97;
        margin:10px auto 10px auto;
    }
    .chat-input{
        height:30px;
    }

    .close-chat-button{
        width:50px;
        height:50px;
        background: #eb6d6d;
        border-radius:50%;
        position:absolute;
        top:-30px;
        right:-30px;
        display:flex;
        justify-content:center;
        align-items:center;
        cursor:pointer;
        z-index:1001;
        display:block;
    }
</style>
<script>
    // variables
    var selectedBookId = null;
    var skipCounter = 0;
    //
    const background = `
            <div class="dark-background" id="dark-background">

        </div>
                     <div class="commnetscontainer" id="commnetscontainer" >
                        <button class="close-chat-button" id="close-chat-button" onclick="CloseChatContainer()">
                                 <i class="fa-solid fa-xmark"></i>
                        </button>
                 
                 <div class="screen">

                    
                 </div>
                     <div class="bottom">
                        <input type="text" class="chat-input" id="chat-input" />
                            <button class="btn btn-success" onclick="SendChatToServer()">Send Comment</button>
                                    <button class="btn btn-info" onclick="LoadComments()">Load More</button>
                    </div>


                </div>
        `

    const commentbtn = $(".commentbutton")
    commentbtn.each(function () {
         $(this).on("click", () => {
            selectedBookId = $(this).attr("bookId")
            console.log(selectedBookId)
            $("body").append(background); // Corrected variable name

         })
    })

    function CloseChatContainer() {

            $("#dark-background").remove();
            $("#commnetscontainer").remove();
        skipCounter = 0;
        selectedBookId= null
    }

    // ajax
    function SendChatToServer() {
        const inputData = $("#chat-input").val();
        
        $.ajax({
            method: "POST",
            url: "/Home/HandleChatInput",
            dataType: "json",
            data: { inputData: inputData , bookId : selectedBookId},  // Send the plain string directly
            success: function (response) {
                if (response.success) {
                    toastr.success(response.responseText)
                } else {
                    // DoSomethingElse()
                    toastr.error(response.responseText)
                }
            },
            error: function (response) {
                toastr.error("Internal Error")
            }
        });
    }
   
    // ajax
    function LoadComments(){
        $.ajax({
            method: "POST",
            url: "/Home/Comments",
            dataType: "json",
            data: { skip: skipCounter, bookId: selectedBookId },  // Send the plain string directly
            success: function (comments) {
                if (comments.success == false) {
                    toastr.error("no comments left")
                }else{
                    // Handle the comments received in the response
                    console.log("Comments:", comments);
                    skipCounter++;
                    Print(comments)
                }

                // You can update your UI with the received data
            },
            error: function (xhr, textStatus, errorThrown) {
                console.error("Error getting comments:", xhr.responseText);
            }
        });
    }


    // print data to screen
    function Print(jsonobj) {
        for(var obj of jsonobj){
            const imgpath = obj.userProfile.profileImgPath
            const anonimous = '@(Utility.SD.AnonimUserProfileImgPath.ToString())'
            const template = `<div class="chat">
                     <img class="profile-img-background" src="${imgpath != null ? imgpath : anonimous}"></img>
                        <div>
                            ${obj.message}
                        </div>
                     </div>
                                   
            `
            document.getElementsByClassName("screen")[0].innerHTML += template;
        }
    }
</script>